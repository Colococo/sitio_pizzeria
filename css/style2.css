/************************************/
/* HEADER SECTION */
/************************************/

.header {
  display: flex;
  justify-content: space-between;
  align-items: center;
  background-color: #e6eff7;
  height: 9.6rem;
  padding: 0 4.8rem;
}

.logo {
  height: 6.2rem;
}

/************************************/
/* NAVIGATION */
/************************************/

.main-nav-list {
  list-style: none;
  display: flex;
  align-items: center;
  gap: 3.2rem;
}

.main-nav-link:link,
.main-nav-link:visited {
  display: inline-block;
  text-decoration: none;
  color: #333;
  font-weight: 500;
  font-size: 1.8rem;
  transition: all 0.3s;
}

.main-nav-link:hover,
.main-nav-link:active {
  color: #0962aa;
}

.main-nav-link.nav-cta:link,
.main-nav-link.nav-cta:visited {
  padding: 1.2rem 2.4rem;
  border-radius: 9px;
  color: #fff;
  background-color: #0962aa;
  display: inline-block;
}

.main-nav-link.nav-cta:hover,
.main-nav-link.nav-cta:active {
  background-color: #053b66;
}

/************************************/
/* HERO SECTION */
/************************************/

.section-hero {
  background-color: #e6eff7;
  padding: 4.8rem 0 9.6rem 0;
}

.hero {
  max-width: 130rem;
  display: grid;
  grid-template-columns: 1fr 1fr;
  gap: 9.6rem;
  margin: 0 auto;
  padding: 0 3.2rem;
  align-items: center;
}

.hero-description {
  font-size: 2rem;
  line-height: 1.6;
  margin-bottom: 4.8rem;
}

.hero-image {
  width: 100%;
}

.delivered-meals {
  display: flex;
  align-items: center;
  gap: 1.6rem;
  margin-top: 8rem;
}

.delivered-imgs {
  display: flex;
}

.delivered-imgs img {
  height: 4.8rem;
  width: 4.8rem;
  border-radius: 50%;
  margin-right: -1.6rem;
  border: 3px solid #e6eff7;
}

.delivered-imgs img:last-child {
  margin: 0;
}

.delivered-text {
  font-size: 1.8rem;
  font-weight: 600;
}

.delivered-text span {
  color: #0962aa;
  font-weight: 700;
}

/************************************/
/* SECTION HOW IT WORKS */
/************************************/

.section-how {
  padding: 9.6rem 0;
  /* background-color: #e6eff7; */
}

.step-number {
  font-size: 8.6rem;
  font-weight: 600;
  color: #ddd;
  /* en accessiblididad le damos prioridad al estilo visual que 
  no es  realmente importante; el contenido 01 no es crucial 
  por el ususario entender. Podemos romper la regla del contraste
  del color. 
   */
  /* espacio inferior */
  margin-bottom: 1.2rem;
}

.step-img {
  width: 45%;
  border-radius: 19px;
  /* centrada horizontal y vertical */
}

/* los estilos de los heading van a ser re utilizables por
eso los colocamos en la seccion general */

/* Empezamos con los textos de la seccion 
.step-number, .heading-tertiary y .step-description */

/* .heading-tertirary va en la seccion general */

/* separamos los archivos */

/* centramos la imagen verticalmente y horizontalmente porque si 
agregamos mucho texto al costado veremos que la imagen  queda en 
una posicion diferente que el texto */

.step-img-box {
  position: relative;
  display: flex;
  align-items: center;
  justify-content: center;
}
.step-img-box::before,
.step-img-box::after {
  content: '';
  display: block;

  /* pero lo mueve la imagen a la derecha, por eso necesitamos
  posicionarlo absolutamente */
  position: absolute; /* tenemos que hacer el elemento padre con posicion relative*/

  /* lo queremos centrado */
  top: 50%;
  left: 50%;
  /* usamos la propiedad transform con la propiedad translate que movera el 
elemento  */
  transform: translate(-50%, -50%);
  border-radius: 50%;
}

.step-img-box::before {
  /* dado que la image es 35% entonces 60% es mas todavia  */
  width: 65%;

  /* el porcentaje a veces no funciona para que se visualiza en 
  su formato por default que es un cuadrado, necesitamos otra 
  manera de asignar el alto del elemento (height) */
  /* height: 60%; */
  /* para darle el alto usamos el padding bottom */
  /* es 60% del ancho del elemento padre */
  /* normalmente crea un elemento con el alto en 0 aunque usamos
  padding-bottom: que lo hara cuadrado, en realidad el alto es 0
  pero como estamos agregando el padding-bottom aparecera como 
  si fuera un cuadrado.  */
  padding-bottom: 65%;
  background-color: #ffe6e6;
  /* lo debemos colocar debajo de la imagen */
  z-index: -2;
}

.step-img-box::after {
  width: 55%;
  padding-bottom: 55%;
  background-color: #ff9999;
  z-index: -1;
}

/* usamos psudo element */
.step-description {
  font-size: 1.8rem;
  line-height: 1.8;
}

/* necesitamos centrar el texto verticalmente, entonces agregamos una nueva
clase en el general.css  

.grid--center-v {
  align-items: center;
}

y la asignamos al div que tiene el grid 

<div class="container grid grid--2-cols grid--center-v">

*/

/* agregamos un circulo detras de la imagen sino parece que esta muy alejada del
text al costado, los circulos deberian tambien aparecer en una aplicacion mobile
Usamos un elemento psudo que insertara un elemento en el eleemnto, sera agregado 
al .step-img-box porque no puede ser agregado a imagenes */
